{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","resumeData","react_default","a","createElement","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","About","src","alt","aboutme","address","email","website","Resume","skills","concat","toLowerCase","replace","skillname","ContactUs","Footer","imagebaseurl","linkedinId","skypeid","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","portfolio","description","imgurl","testimonials","App","components_Header","components_About","components_Resume","components_ContactUs","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28362e0e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ resumeData }) => (\n  <header id=\"home\">\n    <nav id=\"nav-wrap\">\n      <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Expandir menu\">\n        Expandir menu\n      </a>\n      <a className=\"mobile-btn\" href=\"#\" title=\"Esconder menu\">\n        Esconder menu\n      </a>\n      <ul id=\"nav\" className=\"nav\">\n        <li className=\"current\">\n          <a className=\"smoothscroll\" href=\"#home\">\n            Início\n          </a>\n        </li>\n        <li>\n          <a className=\"smoothscroll\" href=\"#about\">\n            Sobre\n          </a>\n        </li>\n        <li>\n          <a className=\"smoothscroll\" href=\"#resume\">\n            Skills\n          </a>\n        </li>\n        {/* <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  Portifólio\n                </a>\n              </li> */}\n        {/* <li>\n                <a className=\"smoothscroll\" href=\"#testimonials\">\n                  Testimonials\n                </a>\n              </li> */}\n        <li>\n          <a className=\"smoothscroll\" href=\"#contact\">\n            Contato\n          </a>\n        </li>\n      </ul>\n    </nav>\n\n    <div className=\"row banner\">\n      <div className=\"banner-text\">\n        <h1 className=\"responsive-headline\">{resumeData.name}</h1>\n        <h3 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n          {resumeData.role}.{resumeData.roleDescription}\n        </h3>\n        <hr />\n        <ul className=\"social\">\n          {resumeData.socialLinks &&\n            resumeData.socialLinks.map(item => (\n              <li key={item.name}>\n                <a href={item.url} target=\"_blank\">\n                  <i className={item.className} />\n                </a>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n\n    <p className=\"scrolldown\">\n      <a className=\"smoothscroll\" href=\"#about\">\n        <i className=\"icon-down-circle\" />\n      </a>\n    </p>\n  </header>\n);\n\nHeader.propTypes = {\n  resumeData: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    roleDescription: PropTypes.string.isRequired,\n    socialLinks: PropTypes.array.isRequired\n  }).isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst About = ({ resumeData }) => (\n  <section id=\"about\">\n    <div className=\"row\">\n      <div className=\"three columns\">\n        <img className=\"profile-pic\" src=\"images/profilepic.png\" alt=\"\" />\n      </div>\n\n      <div className=\"nine columns main-col\">\n        <h2>Sobre</h2>\n        <p>{resumeData.aboutme}</p>\n\n        <div className=\"row\">\n          <div className=\"columns contact-details\">\n            <h2>Contato</h2>\n            <p className=\"address\">\n              <span>{resumeData.name}</span>\n              <br />\n              <span>{resumeData.address}</span>\n              <br />\n              <span>{resumeData.email}</span>\n              <br />\n              <span>{resumeData.website}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nAbout.propTypes = {\n  resumeData: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    aboutme: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired,\n    website: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Resume = ({ resumeData }) => (\n  <section id=\"resume\">\n    <div className=\"row skill\">\n      <div className=\"three columns header-col\">\n        <h1>\n          <span>Skills</span>\n        </h1>\n      </div>\n\n      <div className=\"nine columns main-col\">\n        {/* <p>{resumeData.skillsDescription}</p> */}\n\n        <div className=\"bars\">\n          <ul className=\"skills\">\n            {resumeData.skills &&\n              resumeData.skills.map(item => (\n                <li key={item.id}>\n                  <span\n                    className={`bar-expand ${item.key\n                      .toLowerCase()\n                      .replace(/ /g, \"\")}`}\n                  />\n                  <em>{item.skillname}</em>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nResume.propTypes = {\n  resumeData: PropTypes.shape({\n    skills: PropTypes.array.isRequired\n  }).isRequired\n};\n\nexport default Resume;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactUs = ({ resumeData }) => (\n  <section id=\"contact\">\n    <div className=\"row section-head\">\n      <div className=\"ten columns\">\n        <p className=\"lead\">\n          Sinta-se à vontade para entrar em contato comigo para algum trabalho\n          ou sugestão\n        </p>\n      </div>\n    </div>\n    {/* <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              <h4>Linked in :\n                {resumeData.linkedinId}\n              </h4>\n            </div>\n          </aside>\n        </div> */}\n  </section>\n);\n\nContactUs.propTypes = {\n  resumeData: PropTypes.shape({\n    linkedinId: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default ContactUs;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Footer = ({ resumeData }) => (\n  <footer>\n    <div className=\"row\">\n      <div className=\"twelve columns\">\n        <ul className=\"social-links\">\n          {resumeData.socialLinks &&\n            resumeData.socialLinks.map(item => (\n              <li key={item.name}>\n                <a href={item.url}>\n                  <i className={item.className} />\n                </a>\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div id=\"go-top\">\n        <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n          <i className=\"icon-up-open\" />\n        </a>\n      </div>\n    </div>\n  </footer>\n);\n\nFooter.propTypes = {\n  resumeData: PropTypes.shape({\n    socialLinks: PropTypes.array.isRequired\n  }).isRequired\n};\n\nexport default Footer;\n","let resumeData = {\n  imagebaseurl: \"https://rbhatia46.github.io/\",\n  name: \"Cristiane Ferreira\",\n  role: \"Desenvolvedora React Front-End e Mobile\",\n  linkedinId: \"cristianemayara\",\n  skypeid: \"cris.mayara_3\",\n  roleDescription: \"\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/cristianemayara/\",\n      className: \"fa fa-linkedin\"\n    },\n    {\n      name: \"github\",\n      url: \"http://github.com/cristianemayara\",\n      className: \"fa fa-github\"\n    },\n    {\n      name: \"skype\",\n      url: \"/cris.mayara_3\",\n      className: \"fa fa-skype\"\n    }\n  ],\n  aboutme:\n    \"Atualmente sou desenvolvedora Front-End React, com experiência em projetos mobile para Android e iOS.\",\n  address: \"Florianópolis - SC, Brasil\",\n  email: \"cris.mayara@gmail.com\",\n  website: \"https://cristianemayara.github.io\",\n  education: [\n    {\n      UniversityName: \"The LNM Insitute of Information Technology\",\n      specialization: \"Some specialization\",\n      MonthOfPassing: \"Aug\",\n      YearOfPassing: \"2020\",\n      Achievements: \"Some Achievements\"\n    },\n    {\n      UniversityName: \"Some University\",\n      specialization: \"Some specialization\",\n      MonthOfPassing: \"Jan\",\n      YearOfPassing: \"2018\",\n      Achievements: \"Some Achievements\"\n    }\n  ],\n  work: [\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\"\n    },\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\"\n    }\n  ],\n  skillsDescription: \"\",\n  skills: [\n    {\n      id: 1,\n      key: \"reactjs\",\n      skillname: \"ReactJS\"\n    },\n    {\n      id: 2,\n      key: \"reactnative\",\n      skillname: \"React Native\"\n    },\n\n    {\n      id: 3,\n      key: \"redux\",\n      skillname: \"Redux\"\n    },\n    {\n      id: 4,\n      key: \"graphql\",\n      skillname: \"GraphQL/Apollo Cli\"\n    },\n    {\n      id: 5,\n      key: \"html5\",\n      skillname: \"HTML5\"\n    },\n    {\n      id: 6,\n      key: \"css\",\n      skillname: \"CSS3/Flexbox/SASS/Styled Components\"\n    },\n    {\n      id: 7,\n      key: \"javascript\",\n      skillname: \"Javascript\"\n    },\n    {\n      id: 8,\n      key: \"jest\",\n      skillname: \"Jest/Enzyme\"\n    },\n    {\n      id: 9,\n      key: \"android\",\n      skillname: \"Android\"\n    },\n    {\n      id: 10,\n      key: \"nodejs\",\n      skillname: \"NodeJS\"\n    },\n    {\n      id: 11,\n      key: \"mongodb\",\n      skillname: \"MongoDB\"\n    }\n  ],\n  portfolio: [\n    {\n      name: \"project1\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/phone.jpg\"\n    },\n    {\n      name: \"project2\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/project.jpg\"\n    },\n    {\n      name: \"project3\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/project2.png\"\n    },\n    {\n      name: \"project4\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/phone.jpg\"\n    }\n  ],\n  testimonials: [\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\"\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\"\n    }\n  ]\n};\n\nexport default resumeData;\n","import React from \"react\";\n\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Resume from \"./components/Resume\";\n// import Portfolio from \"./components/Portfolio\";\n// import Testimonials from \"./components/Testimonials\";\nimport ContactUs from \"./components/ContactUs\";\nimport Footer from \"./components/Footer\";\nimport resumeData from \"./resumeData\";\n\nconst App = () => (\n  <div className=\"App\">\n    <Header resumeData={resumeData} />\n    <About resumeData={resumeData} />\n    <Resume resumeData={resumeData} />\n    {/* <Portfolio resumeData={resumeData}/> */}\n    {/* <Testimonials resumeData={resumeData}/> */}\n    <ContactUs resumeData={resumeData} />\n    <Footer resumeData={resumeData} />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}